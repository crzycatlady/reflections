What happens when you initialize a repository? Why do you need to do it?
It create the repository to be committed to git. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The working directory is the local directory that has changes that you have not committed yet, the staging contains the files you
want to commit into the repository. You don't have to commit all of your changes you can commit only the files you want.

How can you use the staging area to make sure you have one commit per logical
change?
You can do a git diff --staged to see the difference between the staging area and the repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Branches would be helpful when you are doing prototypes or trying to fix some bugs, tested and reviewed before it is 
merged to the master. Branches are good when everyone needs to work on various version on the master branch without 
affecting the master branch.

How do the diagrams help you visualize the branch structure?
It helps me determine how many branches are from master and which have been merged into the master.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
You are able to merge your branch with master. To visualize how many branches are there from a master.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
The automatic merging makes it easier but I cannot revert a mistake if one happens and can be error prone. 
Manual can be time consuming and can potentially be user error prone.